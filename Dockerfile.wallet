# Dockerfile for BlackHole Wallet Service
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git gcc musl-dev

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.work go.work.sum ./
COPY core/go.mod core/go.sum ./core/
COPY libs/go.mod ./libs/
COPY parachains/go.mod ./parachains/
COPY services/go.mod ./services/

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the wallet service
WORKDIR /app/services/wallet
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o wallet-service .

# Production stage
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates tzdata

# Create app user
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# Set working directory
WORKDIR /app

# Copy binary from builder
COPY --from=builder /app/services/wallet/wallet-service .

# Create necessary directories
RUN mkdir -p /app/data /app/logs /app/config && \
    chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Expose ports
EXPOSE 9000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:9000/api/status || exit 1

# Environment variables
ENV WALLET_PORT=9000
ENV WALLET_DATA_DIR=/app/data
ENV WALLET_LOG_DIR=/app/logs
ENV WALLET_LOG_LEVEL=info
ENV MONGODB_URI=mongodb://mongodb:27017

# Default command
CMD ["./wallet-service", "-web", "-port", "9000"]
