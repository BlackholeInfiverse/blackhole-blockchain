version: '3.8'

services:
  # Main BlackHole Blockchain Node (using existing binary)
  blockchain:
    image: alpine:latest
    container_name: blackhole-blockchain
    ports:
      - "8080:8080"   # Main blockchain dashboard
      - "8545:8545"   # RPC endpoint
      - "30303:30303" # P2P networking
    environment:
      - BLOCKCHAIN_PORT=8080
      - RPC_PORT=8545
      - P2P_PORT=30303
      - DATABASE_PATH=./data/blockchain.db
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FILE=./logs/blockchain.log
      - PEER_DISCOVERY=${PEER_DISCOVERY:-true}
      - MAX_PEERS=${MAX_PEERS:-50}
      - BOOTSTRAP_PEERS=${BOOTSTRAP_PEERS:-}
      - NODE_ID=${NODE_ID:-blackhole-node-1}
    volumes:
      - ../core/relay-chain/relay-chain.exe:/app/blockchain:ro
      - blockchain_data:/app/data
      - blockchain_logs:/app/logs
      - blockchain_config:/app/config
    working_dir: /app
    command: ["./blockchain"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    networks:
      - blackhole_network

  # Bridge SDK Service (using Go runtime)
  bridge-sdk:
    image: golang:1.23-alpine
    container_name: blackhole-bridge-sdk
    ports:
      - "8084:8084"   # Bridge SDK dashboard
      - "9090:9090"   # Relay server
    environment:
      - BRIDGE_PORT=8084
      - DATABASE_PATH=./data/bridge_fixed.db
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FILE=./logs/bridge.log
      - REPLAY_PROTECTION_ENABLED=${REPLAY_PROTECTION_ENABLED:-true}
      - CIRCUIT_BREAKER_ENABLED=${CIRCUIT_BREAKER_ENABLED:-true}
      - MAX_RETRIES=${MAX_RETRIES:-3}
      - ENABLE_COLORED_LOGS=${ENABLE_COLORED_LOGS:-true}
      - ENABLE_DOCUMENTATION=${ENABLE_DOCUMENTATION:-true}
      - ETHEREUM_RPC=${ETHEREUM_RPC:-wss://eth-mainnet.ws.alchemyapi.io/v2/demo}
      - SOLANA_RPC=${SOLANA_RPC:-https://api.mainnet-beta.solana.com}
      - BLACKHOLE_RPC=${BLACKHOLE_RPC:-http://blockchain:8545}
      - GOTOOLCHAIN=go1.24.3
    volumes:
      - ../bridge-sdk/example:/app:ro
      - bridge_data:/app/data
      - bridge_logs:/app/logs
    working_dir: /app
    command: ["go", "run", "main.go"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      - blockchain
    networks:
      - blackhole_network

volumes:
  # Blockchain volumes
  blockchain_data:
    driver: local
  blockchain_logs:
    driver: local
  blockchain_config:
    driver: local
  # Bridge SDK volumes
  bridge_data:
    driver: local
  bridge_logs:
    driver: local

networks:
  blackhole_network:
    driver: bridge
    name: blackhole_network
    ipam:
      config:
        - subnet: 172.20.0.0/16
