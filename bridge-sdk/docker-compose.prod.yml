version: '3.8'

# Production overrides for BlackHole Bridge
services:
  # Production bridge node with resource limits and security
  bridge-node:
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
      replicas: 1
    environment:
      - APP_ENV=production
      - DEBUG_MODE=false
      - LOG_LEVEL=info
      - ENABLE_PROFILING=false
      - ENABLE_TRACING=false
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Production PostgreSQL with performance tuning
  postgres:
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    environment:
      POSTGRES_DB: bridge_db
      POSTGRES_USER: bridge
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    command: >
      postgres
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c max_worker_processes=4
      -c max_parallel_workers_per_gather=2
      -c max_parallel_workers=4
      -c max_parallel_maintenance_workers=2
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  # Production Redis with persistence and security
  redis:
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 60
      --timeout 300
      --save 900 1
      --save 300 10
      --save 60 10000
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  # Production Prometheus with retention and security
  prometheus:
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.wal-compression'
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  # Production Grafana with security
  grafana:
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'
    environment:
      GF_SECURITY_ADMIN_PASSWORD_FILE: /run/secrets/grafana_admin_password
      GF_USERS_ALLOW_SIGN_UP: false
      GF_SECURITY_DISABLE_GRAVATAR: true
      GF_SECURITY_COOKIE_SECURE: true
      GF_SECURITY_COOKIE_SAMESITE: strict
      GF_SECURITY_STRICT_TRANSPORT_SECURITY: true
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_LOG_LEVEL: warn
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  # Production Nginx with SSL and security headers
  nginx:
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true

  # Log aggregation service
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: blackhole-bridge-fluentd
    restart: always
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - ./logging/fluentd.conf:/fluentd/etc/fluent.conf:ro
      - fluentd-logs:/var/log/fluentd
    networks:
      - bridge-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    security_opt:
      - no-new-privileges:true

  # Node exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: blackhole-bridge-node-exporter
    restart: always
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - bridge-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true

  # Redis exporter for Redis metrics
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: blackhole-bridge-redis-exporter
    restart: always
    ports:
      - "9121:9121"
    environment:
      REDIS_ADDR: redis://redis:6379
    networks:
      - bridge-network
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true

  # PostgreSQL exporter for database metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: blackhole-bridge-postgres-exporter
    restart: always
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: postgresql://bridge:bridge123@postgres:5432/bridge_db?sslmode=disable
    networks:
      - bridge-network
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true

# Production secrets (use external secret management in real production)
secrets:
  postgres_password:
    external: true
  grafana_admin_password:
    external: true
  jwt_secret:
    external: true

# Additional volumes for production
volumes:
  fluentd-logs:
    driver: local

# Production network with custom subnet
networks:
  bridge-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    driver_opts:
      com.docker.network.bridge.name: br-blackhole
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
