version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: blackhole-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: blackhole123
      MONGO_INITDB_DATABASE: blackhole_wallet
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - blackhole-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Blockchain Node 1 (Primary)
  blockchain-node-1:
    build:
      context: .
      dockerfile: Dockerfile.blockchain
    container_name: blackhole-blockchain-1
    restart: unless-stopped
    ports:
      - "3000:3000"  # P2P port
      - "8080:8080"  # API/Dashboard port
    volumes:
      - blockchain_data_1:/app/data
      - blockchain_logs_1:/app/logs
    environment:
      - BLACKHOLE_PORT=3000
      - BLACKHOLE_API_PORT=8080
      - BLACKHOLE_NODE_ID=node-1
      - BLACKHOLE_LOG_LEVEL=info
    networks:
      - blackhole-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      mongodb:
        condition: service_healthy

  # Blockchain Node 2 (Secondary)
  blockchain-node-2:
    build:
      context: .
      dockerfile: Dockerfile.blockchain
    container_name: blackhole-blockchain-2
    restart: unless-stopped
    ports:
      - "3001:3000"  # P2P port
      - "8081:8080"  # API/Dashboard port
    volumes:
      - blockchain_data_2:/app/data
      - blockchain_logs_2:/app/logs
    environment:
      - BLACKHOLE_PORT=3000
      - BLACKHOLE_API_PORT=8080
      - BLACKHOLE_NODE_ID=node-2
      - BLACKHOLE_LOG_LEVEL=info
      - BLACKHOLE_PEER_ADDR=/ip4/blockchain-node-1/tcp/3000
    networks:
      - blackhole-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      blockchain-node-1:
        condition: service_healthy

  # Blockchain Node 3 (Tertiary)
  blockchain-node-3:
    build:
      context: .
      dockerfile: Dockerfile.blockchain
    container_name: blackhole-blockchain-3
    restart: unless-stopped
    ports:
      - "3002:3000"  # P2P port
      - "8082:8080"  # API/Dashboard port
    volumes:
      - blockchain_data_3:/app/data
      - blockchain_logs_3:/app/logs
    environment:
      - BLACKHOLE_PORT=3000
      - BLACKHOLE_API_PORT=8080
      - BLACKHOLE_NODE_ID=node-3
      - BLACKHOLE_LOG_LEVEL=info
      - BLACKHOLE_PEER_ADDR=/ip4/blockchain-node-1/tcp/3000
    networks:
      - blackhole-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      blockchain-node-1:
        condition: service_healthy

  # Wallet Service
  wallet-service:
    build:
      context: .
      dockerfile: Dockerfile.wallet
    container_name: blackhole-wallet
    restart: unless-stopped
    ports:
      - "9000:9000"  # Wallet web UI port
    volumes:
      - wallet_data:/app/data
      - wallet_logs:/app/logs
    environment:
      - WALLET_PORT=9000
      - WALLET_LOG_LEVEL=info
      - MONGODB_URI=mongodb://admin:blackhole123@mongodb:27017/blackhole_wallet?authSource=admin
      - BLOCKCHAIN_PEER_ADDR=/ip4/blockchain-node-1/tcp/3000
    networks:
      - blackhole-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      mongodb:
        condition: service_healthy
      blockchain-node-1:
        condition: service_healthy

  # Load Balancer (Nginx)
  nginx:
    image: nginx:alpine
    container_name: blackhole-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    networks:
      - blackhole-network
    depends_on:
      - blockchain-node-1
      - blockchain-node-2
      - blockchain-node-3
      - wallet-service

  # Monitoring (Prometheus - Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: blackhole-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - blackhole-network

  # Grafana Dashboard (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: blackhole-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=blackhole123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - blackhole-network
    depends_on:
      - prometheus

# Networks
networks:
  blackhole-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  blockchain_data_1:
    driver: local
  blockchain_data_2:
    driver: local
  blockchain_data_3:
    driver: local
  blockchain_logs_1:
    driver: local
  blockchain_logs_2:
    driver: local
  blockchain_logs_3:
    driver: local
  wallet_data:
    driver: local
  wallet_logs:
    driver: local
  nginx_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
